<?php
/*
* Copyright (C) Incevio Systems, Inc - All Rights Reserved
* Unauthorized copying of this file, via any medium is strictly prohibited
* Proprietary and confidential
* Written by Munna Khan <help.Phza24@gmail.com>, September 2018
*/
 namespace App\Http\Controllers\Admin; use App\Models\Package; use App\Http\Controllers\Controller; use App\Http\Requests\Validations\PackageInstallationRequest; use App\Services\PackageInstaller; use Illuminate\Http\Request; use Illuminate\Support\Facades\Artisan; use Illuminate\Support\Facades\Log; use Illuminate\Support\Facades\DB; class PackagesController extends Controller { public function index() { $installables = $this->scanPackages(); $installs = Package::all(); return view("\141\x64\x6d\151\x6e\x2e\x70\141\143\153\141\147\145\163\x2e\151\156\144\x65\x78", compact("\x69\x6e\163\164\141\154\154\x61\x62\x6c\x65\x73", "\151\156\163\164\x61\154\x6c\x73")); } public function upload() { return view("\141\x64\155\151\156\x2e\160\x61\x63\x6b\141\x67\145\x73\56\x5f\x75\160\x6c\157\141\144"); } public function save(Request $request) { echo "\x3c\160\x72\145\76"; print_r($request->all()); echo "\x3c\160\162\x65\76"; exit("\x65\x6e\x64\41"); } public function initiate(Request $request, $package) { if (!(config("\141\160\160\56\x64\145\155\x6f") == true && config("\141\160\x70\56\x64\x65\142\165\x67") !== true)) { goto b1CO3; } return back()->with("\167\x61\162\x6e\151\156\147", trans("\155\x65\x73\x73\x61\x67\145\163\x2e\x64\x65\155\157\137\162\145\x73\164\x72\151\x63\164\x69\157\156")); b1CO3: $installable = $this->scanPackages($package); if (!$installable) { goto HiL92; } if (!Package::where("\x73\154\x75\147", $installable["\163\154\x75\x67"])->first()) { goto PYe93; } return back()->with("\x65\x72\162\x6f\x72", trans("\x6d\145\163\163\x61\147\145\163\56\160\x61\x63\x6b\x61\x67\145\x5f\151\x6e\163\x74\x61\154\x6c\x65\144\137\x61\x6c\x72\145\x61\x64\171", ["\160\x61\x63\153\x61\x67\145" => $package])); PYe93: HiL92: return view("\x61\144\155\151\x6e\56\160\141\143\153\141\147\x65\x73\56\x5f\151\x6e\151\164\151\x61\x74\x65", compact("\151\x6e\163\x74\x61\154\154\x61\x62\x6c\x65")); } public function install(PackageInstallationRequest $request, $package) { if (!(config("\x61\160\160\56\144\x65\x6d\157") == true && config("\141\160\160\56\144\x65\x62\165\x67") !== true)) { goto XzHQi; } return back()->with("\x77\141\x72\x6e\151\x6e\x67", trans("\x6d\x65\x73\163\x61\147\x65\163\56\144\145\x6d\157\x5f\x72\x65\x73\x74\162\151\x63\x74\151\157\156")); XzHQi: $installable = $this->scanPackages($package); if (!$installable) { goto n1pql; } try { $installer = new PackageInstaller($request, $installable); $installer->install(); } catch (\Exception $e) { Log::error($e); $installer->uninstall(); $registered = Package::where("\x73\154\165\x67", $package)->first(); if (!$registered) { goto r1GwT; } $registered->delete(); r1GwT: return back()->with("\x65\162\x72\157\162", $e->getMessage()); } Artisan::call("\143\141\143\150\145\72\143\154\x65\x61\162"); Artisan::call("\162\x6f\165\x74\145\72\143\154\x65\x61\162"); return back()->with("\163\x75\143\x63\145\163\x73", trans("\x6d\x65\x73\x73\141\147\x65\163\56\160\x61\x63\153\141\x67\145\137\151\156\x73\x74\x61\x6c\x6c\145\x64\137\x73\x75\x63\143\145\x73\163", ["\160\141\x63\x6b\x61\x67\145" => $package])); n1pql: return back()->with("\145\x72\162\157\x72", trans("\x6d\x65\x73\x73\141\x67\145\163\56\146\x61\x69\x6c\145\x64")); } public function uninstall(Request $request, $package) { if (!(config("\x61\160\160\56\144\145\155\157") == true && config("\x61\x70\x70\x2e\x64\145\x62\x75\x67") !== true)) { goto UVGZQ; } return back()->with("\167\141\162\x6e\x69\156\x67", trans("\155\145\163\x73\x61\x67\145\x73\56\144\x65\155\157\x5f\x72\x65\163\x74\162\x69\x63\164\151\157\156")); UVGZQ: $registered = Package::where("\163\154\x75\147", $package)->firstOrFail(); $uninstallable = $this->scanPackages($package); DB::beginTransaction(); try { $installer = new PackageInstaller($request, $uninstallable); if (!$installer->uninstall()) { goto DmImj; } Artisan::call("\x63\141\143\x68\145\x3a\x63\154\145\141\x72"); Artisan::call("\162\x6f\x75\164\145\x3a\143\154\145\x61\162"); if (!$registered->delete()) { goto R9Qq_; } $msg = trans("\155\145\x73\x73\x61\147\145\x73\x2e\160\x61\143\x6b\141\x67\145\x5f\x75\x6e\x69\x6e\x73\164\x61\154\x6c\x65\144\137\x73\165\x63\143\145\163\163", ["\160\x61\x63\x6b\x61\147\145" => $package]); DB::commit(); return back()->with("\x73\x75\143\143\145\x73\x73", $msg); R9Qq_: DmImj: } catch (\Exception $e) { DB::rollback(); Log::error($e); return back()->with("\x65\x72\x72\x6f\162", $e->getMessage()); } return back()->with("\x65\162\x72\157\162", trans("\155\145\x73\x73\x61\x67\x65\163\56\x66\x61\x69\154\x65\x64")); } public function activation(Request $request, $package) { if (!(config("\x61\x70\160\56\x64\x65\x6d\157") == true && config("\141\160\x70\x2e\x64\x65\x62\x75\x67") !== true)) { goto MIbKx; } return response("\145\162\162\x6f\162", 444); MIbKx: if (!($registered = Package::where("\163\154\165\x67", $package)->first())) { goto KUZPS; } $registered->active = !$registered->active; $registered->save(); Artisan::call("\x63\x61\x63\x68\145\72\x63\x6c\x65\x61\162"); return response("\163\x75\143\x63\x65\163\163", 200); KUZPS: $unregistered = $this->scanPackages($package); Log::info($unregistered); if (!$unregistered) { goto im3ko; } $registered = Package::create($unregistered); im3ko: return response("\163\x75\x63\x63\145\163\x73", 200); } public function updateConfig(Request $request) { if (!updateOptionTable($request)) { goto stk_w; } Artisan::call("\143\x61\x63\150\145\x3a\x63\x6c\145\141\162"); return back()->with("\x73\165\143\x63\x65\x73\163", trans("\x6d\x65\x73\x73\x61\x67\x65\163\56\160\x61\x63\153\x61\147\x65\137\x73\x65\x74\x74\x69\x6e\147\163\137\x75\x70\x64\141\164\x65\x64")); stk_w: return back()->with("\x65\x72\x72\157\x72", trans("\x6d\145\x73\163\141\x67\145\x73\56\146\x61\151\154\145\x64")); } public function toggleConfig(Request $request, $option) { if (!(config("\x61\160\x70\x2e\144\x65\x6d\157") == true && config("\x61\160\x70\56\144\x65\x62\x75\x67") !== true)) { goto c30kW; } return response("\x65\162\x72\157\x72", 444); c30kW: if (!DB::table("\157\160\x74\x69\x6f\156\x73")->where("\157\160\x74\151\157\156\x5f\156\141\x6d\x65", $option)->update(["\157\x70\x74\151\157\x6e\x5f\166\141\154\165\x65" => DB::raw("\x4e\117\x54\40\x6f\160\164\151\157\156\x5f\166\x61\x6c\165\x65")])) { goto ZUHPt; } Artisan::call("\x63\141\143\150\x65\x3a\143\154\145\x61\162"); return response("\163\165\x63\143\x65\x73\163", 200); ZUHPt: return response("\145\x72\162\157\162", 405); } private function scanPackages($slug = null) { $packages = []; foreach (glob(base_path("\x70\x61\143\x6b\x61\147\x65\x73\57\x2a"), GLOB_ONLYDIR) as $dir) { if (!file_exists($manifest = $dir . "\x2f\x6d\141\156\x69\x66\x65\x73\x74\56\x6a\x73\x6f\156")) { goto Bhx2c; } $json = file_get_contents($manifest); if (!($json !== '')) { goto S0shG; } $data = json_decode($json, true); if (!($data === null)) { goto Tse9z; } throw new \Exception("\111\x6e\x76\x61\154\151\144\40\155\x61\156\151\x66\x65\x73\164\56\152\163\157\x6e\40\146\x69\x6c\145\40\141\164\x20\x5b{$dir}\135"); Tse9z: $data["\x70\141\x74\x68"] = $dir; if (!($slug && $data["\x73\x6c\x75\147"] == $slug)) { goto Ys5OB; } return $data; Ys5OB: $packages[] = $data; S0shG: Bhx2c: uAhEV: } V53FZ: return $packages; } }