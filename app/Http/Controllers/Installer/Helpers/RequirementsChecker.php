<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2022-12-16 18:01:51              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*
* Copyright (C) Incevio Systems, Inc - All Rights Reserved
* Unauthorized copying of this file, via any medium is strictly prohibited
* Proprietary and confidential
* Written by Munna Khan <help.Phza24@gmail.com>, September 2018
*/
 namespace App\Http\Controllers\Installer\Helpers; class RequirementsChecker { private $_minPhpVersion = "\x37\x2e\x32\56\x30"; public function check(array $requirements) { $results = []; foreach ($requirements as $type => $requirement) { switch ($type) { case "\x70\150\160": foreach ($requirements[$type] as $requirement) { $results["\162\145\x71\165\151\162\145\x6d\x65\156\164\163"][$type][$requirement] = true; if (extension_loaded($requirement)) { goto Q53Xx; } $results["\162\145\161\x75\151\x72\145\x6d\145\156\164\x73"][$type][$requirement] = false; $results["\x65\162\x72\x6f\x72\163"] = true; Q53Xx: FL4CI: } aGkRF: goto AYIDc; case "\x61\160\141\x63\150\x65": foreach ($requirements[$type] as $requirement) { if (!function_exists("\141\160\141\x63\150\x65\137\x67\x65\164\x5f\155\157\144\165\154\x65\x73")) { goto SGP2i; } $results["\x72\145\x71\x75\x69\x72\145\x6d\145\x6e\164\163"][$type][$requirement] = true; if (in_array($requirement, apache_get_modules())) { goto f3fO_; } $results["\162\x65\x71\165\151\x72\145\x6d\145\x6e\164\163"][$type][$requirement] = false; $results["\145\162\162\x6f\x72\163"] = true; f3fO_: SGP2i: m_Ai8: } e27wP: goto AYIDc; } SSUdu: AYIDc: SGEON: } sXdBi: return $results; } public function checkPHPversion(string $minPhpVersion = null, string $maxPhpVersion = null) { $currentPhpVersion = $this->getPhpVersionInfo(); $supported = false; if (!($minPhpVersion == null)) { goto HTJeS; } $minPhpVersion = $this->getMinPhpVersion(); HTJeS: if ($maxPhpVersion == null && version_compare($currentPhpVersion["\166\x65\x72\163\x69\157\156"], $minPhpVersion, "\x3e\75")) { goto vn3Lh; } if (version_compare($currentPhpVersion["\166\x65\x72\x73\151\x6f\156"], $minPhpVersion, "\x3e\x3d") && version_compare($currentPhpVersion["\x76\x65\x72\x73\151\157\x6e"], $maxPhpVersion, "\74\75")) { goto uDwvf; } goto zPjOD; vn3Lh: $supported = true; goto zPjOD; uDwvf: $supported = true; zPjOD: $phpStatus = ["\x66\165\x6c\154" => $currentPhpVersion["\146\165\x6c\154"], "\x63\165\162\162\145\156\164" => $currentPhpVersion["\x76\145\x72\x73\x69\x6f\156"], "\155\151\x6e\x69\x6d\165\x6d" => $minPhpVersion, "\x6d\141\x78\x69\x6d\165\x6d" => $maxPhpVersion, "\163\x75\x70\x70\157\162\x74\x65\144" => $supported]; return $phpStatus; } private static function getPhpVersionInfo() { $currentVersionFull = PHP_VERSION; preg_match("\43\136\x5c\144\x2b\x28\x5c\56\134\x64\53\x29\x2a\43", $currentVersionFull, $filtered); $currentVersion = $filtered[0]; return ["\x66\165\154\x6c" => $currentVersionFull, "\166\145\x72\x73\x69\x6f\x6e" => $currentVersion]; } protected function getMinPhpVersion() { return $this->_minPhpVersion; } }
